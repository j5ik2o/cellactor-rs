openapi: 3.1.0
info:
  title: Cellactor Runtime Control API
  version: 0.1.0
  description: >-
    Minimal control surface for the no_std actor runtime. Intended for
    host-side test harnesses; not part of the embedded binary.
servers:
  - url: http://localhost:8080
paths:
  /actors:
    post:
      summary: Spawn a new actor using Props template
      operationId: spawnActor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpawnRequest'
      responses:
        '201':
          description: Actor spawned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpawnResponse'
  /actors/{pid}/tell:
    post:
      summary: Send AnyMessage payload through ActorRef
      operationId: tellActor
      parameters:
        - in: path
          name: pid
          required: true
          schema:
            $ref: '#/components/schemas/Pid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnyMessageEnvelope'
      responses:
        '202':
          description: Message enqueued
        '409':
          description: Mailbox backpressure (WouldBlock)
  /deadletters:
    get:
      summary: List recorded deadletter entries (bounded window)
      operationId: listDeadletters
      responses:
        '200':
          description: Deadletter entries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeadletterEntry'
components:
  schemas:
    SpawnRequest:
      type: object
      required: [template]
      properties:
        template:
          type: string
          enum: [ping_pong, supervisor_sample]
        mailboxCapacity:
          type: integer
          minimum: 16
          default: 64
    SpawnResponse:
      type: object
      required: [pid]
      properties:
        pid:
          $ref: '#/components/schemas/Pid'
    Pid:
      type: object
      required: [value, generation]
      properties:
        value:
          type: integer
          format: uint64
        generation:
          type: integer
          format: uint32
    AnyMessageEnvelope:
      type: object
      required: [typeName, payload]
      properties:
        typeName:
          type: string
        payload:
          description: Base64-encoded serialized payload for host tooling. Embedded runtime receives converted AnyMessage via bridge.
          type: string
        metadata:
          type: object
          additionalProperties:
            type: string
    DeadletterEntry:
      type: object
      required: [pid, reason, timestamp]
      properties:
        pid:
          $ref: '#/components/schemas/Pid'
        reason:
          type: string
        timestamp:
          type: string
          format: date-time
        payloadPreview:
          type: string
